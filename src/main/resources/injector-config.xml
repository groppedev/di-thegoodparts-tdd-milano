<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"
	default-lazy-init="true">

	<bean id="spellcheck.infrastructure.componentProvider" class="groppedev.dithegoodparts.application.ComponentSpringProvider">
		<description>Provider dei componenti</description>
	</bean>

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<description>Configurazione Injector per proprietà dell'applicazione
		</description>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath:injector.properties</value>
			</list>
		</property>
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
	</bean>

	<bean id="spellcheck.lexicon" factory-bean="spellcheck.lexicon.factory" factory-method="newLexicon">
		<description>Lessico</description>
	</bean>
	<bean id="spellcheck.lexicon.italianFood" class="groppedev.dithegoodparts.domain.lexicon.LexiconItalianFood">
		<description>Lessico dei cibi italiani</description>
		<constructor-arg index="0" ref="spellcheck.lexicon.repository" />
		<constructor-arg index="1" ref="spellcheck.lexicon.queryexecutor" />
	</bean>
	<bean id="spellcheck.lexicon.italianSport" class="groppedev.dithegoodparts.domain.lexicon.LexiconItalianSport">
		<description>Lessico degli sport italiani</description>
		<constructor-arg index="0" ref="spellcheck.lexicon.repository" />
		<constructor-arg index="1" ref="spellcheck.lexicon.queryexecutor" />
	</bean>
	
	<bean id="spellcheck.lexicon.queryexecutor" class="groppedev.dithegoodparts.domain.lexicon.repository.LexiconQueryExecutor">
		<description>Query Executor del lessico</description>
		<constructor-arg index="0" ref="spellcheck.lexicon.repository" />
	</bean>

	<bean id="spellcheck" class="groppedev.dithegoodparts.domain.spellcheck.SpellChecker">
		<description>Componente per il controllo ortografico (Root del grafo di oggetti)</description>
		<constructor-arg index="0" ref="spellcheck.lexicon" />
		<constructor-arg index="1" ref="spellcheck.suggestions.service" />
	</bean>
	
	<bean id="spellcheck.suggestions.service" class="groppedev.dithegoodparts.domain.lexicon.services.SuggestionService">
		<description>Servizio per i suggerimenti in caso di parole errate</description>
		<constructor-arg index="0" ref="spellcheck.lexicon" />
		<constructor-arg index="1" ref="spellcheck.infrastructure.componentProvider" />
	</bean>
		
	<beans profile="STATIC_APP">
		<bean id="spellcheck.suggestions.strategy.factory" class="groppedev.dithegoodparts.domain.lexicon.services.SuggestionStrategyFactory">
			<description>Factory per la strategia di suggerimento</description>
			<constructor-arg index="0" value="${spellcheck.suggestions.strategy:END_WITH}" />
			<constructor-arg index="1" ref="spellcheck.lexicon.queryexecutor" />
		</bean>

		<bean id="spellcheck.lexicon.factory" class="groppedev.dithegoodparts.domain.lexicon.factory.LexiconAutoInjectorFactory">
			<description>Factory per la creazione dei lessici (Tipo di lessico impostato tramite proprietà dell'injector)</description>
			<constructor-arg index="0" value="${spellcheck.lexicon.type:ITALIAN_SPORT}" />
			<constructor-arg index="1" ref="spellcheck.infrastructure.componentProvider" />
		</bean>
	</beans>
	
	<!-- Le factory per la configurazione dinamica devono essere di tipo prototype ed i valori della configurazione devono essere riletti ogni volta -->
	<beans profile="DYNAMIC_APP">
		<bean id="spellcheck.suggestions.strategy.factory" class="groppedev.dithegoodparts.domain.lexicon.services.SuggestionStrategyFactory" scope="prototype">
			<description>Factory per la strategia di suggerimento</description>
			<constructor-arg index="0" value="#{T(groppedev.dithegoodparts.application.spellcheck.ApplicationRuntimeConfiguration).suggestionStrategyType()}" />
			<constructor-arg index="1" ref="spellcheck.lexicon.queryexecutor" />
		</bean>

		<bean id="spellcheck.lexicon.factory" class="groppedev.dithegoodparts.domain.lexicon.factory.LexiconAutoInjectorFactory" scope="prototype">
			<description>Factory per la creazione dei lessici (Tipo di lessico impostato tramite una proprietà di runtime)</description>
			<constructor-arg index="0" value="#{T(groppedev.dithegoodparts.application.spellcheck.ApplicationRuntimeConfiguration).lexiconType()}" />
			<constructor-arg index="1" ref="spellcheck.infrastructure.componentProvider" />
		</bean>
	</beans>

	<beans profile="PRODUCTION">
		<bean id="spellcheck.lexicon.repository" class="groppedev.dithegoodparts.domain.lexicon.repository.LexiconFileRepository" >
			<description>Repository che si basa su files</description>
		</bean>
	</beans>
	<beans profile="TEST">
		<bean id="spellcheck.lexicon.repository" class="groppedev.dithegoodparts.domain.lexicon.repository.LexiconInMemoryRepository" 
		      init-method="init" destroy-method="destroy">
			<description>Repository in memoria</description>
		</bean>
	</beans>

</beans>
